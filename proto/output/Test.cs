// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: test.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PbTest {

  /// <summary>Holder for reflection information generated from test.proto</summary>
  public static partial class TestReflection {

    #region Descriptor
    /// <summary>File descriptor for test.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TestReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgp0ZXN0LnByb3RvEgdwYl90ZXN0GgpiYXNlLnByb3RvIrABChJDMlNfUmVz",
            "ZXRHYW1lU3RhdGUSIwoKUGxheWVyTGlzdBgBIAMoCzIPLnBiX2Jhc2UuUGxh",
            "eWVyEh8KCFRpbGVMaXN0GAIgAygLMg0ucGJfYmFzZS5UaWxlEisKDlRyb29w",
            "U3RhY2tMaXN0GAMgAygLMhMucGJfYmFzZS5Ucm9vcFN0YWNrEicKDEJ1aWxk",
            "aW5nTGlzdBgEIAMoCzIRLnBiX2Jhc2UuQnVpbGRpbmcisAEKElMyQ19SZXNl",
            "dEdhbWVTdGF0ZRIjCgpQbGF5ZXJMaXN0GAEgAygLMg8ucGJfYmFzZS5QbGF5",
            "ZXISHwoIVGlsZUxpc3QYAiADKAsyDS5wYl9iYXNlLlRpbGUSKwoOVHJvb3BT",
            "dGFja0xpc3QYAyADKAsyEy5wYl9iYXNlLlRyb29wU3RhY2sSJwoMQnVpbGRp",
            "bmdMaXN0GAQgAygLMhEucGJfYmFzZS5CdWlsZGluZyJnCghDMlNfVGVzdBIo",
            "Cglib29rSW5mb3MYASADKAsyFS5wYl90ZXN0LlRlc3RCb29rSW5mbxIxCg9J",
            "ZGVudGl0eVBheWxvYWQYAiABKAsyGC5wYl9iYXNlLklkZW50aXR5UGF5bG9h",
            "ZCJdCgxUZXN0Qm9va0luZm8SHgoCb3AYASABKA4yEi5wYl90ZXN0Lk9wZXJh",
            "dGlvbhIOCgZhdXRob3IYAiABKAkSDQoFdGl0bGUYAyABKAkSDgoGZW50aXR5",
            "GAQgASgDIhoKCFMyQ19UZXN0Eg4KBmVudGl0eRgBIAEoAyo9CglPcGVyYXRp",
            "b24SBwoDQWRkEAASDwoLQWRkU3BlY2lmaWMQARIKCgZSZW1vdmUQAhIKCgZV",
            "cGRhdGUQA0IJWgdwYi50ZXN0YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::PbBase.BaseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::PbTest.Operation), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PbTest.C2S_ResetGameState), global::PbTest.C2S_ResetGameState.Parser, new[]{ "PlayerList", "TileList", "TroopStackList", "BuildingList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PbTest.S2C_ResetGameState), global::PbTest.S2C_ResetGameState.Parser, new[]{ "PlayerList", "TileList", "TroopStackList", "BuildingList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PbTest.C2S_Test), global::PbTest.C2S_Test.Parser, new[]{ "BookInfos", "IdentityPayload" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PbTest.TestBookInfo), global::PbTest.TestBookInfo.Parser, new[]{ "Op", "Author", "Title", "Entity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PbTest.S2C_Test), global::PbTest.S2C_Test.Parser, new[]{ "Entity" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum Operation {
    [pbr::OriginalName("Add")] Add = 0,
    [pbr::OriginalName("AddSpecific")] AddSpecific = 1,
    [pbr::OriginalName("Remove")] Remove = 2,
    [pbr::OriginalName("Update")] Update = 3,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Reset gameState directly, ignore all game rules
  /// </summary>
  public sealed partial class C2S_ResetGameState : pb::IMessage<C2S_ResetGameState> {
    private static readonly pb::MessageParser<C2S_ResetGameState> _parser = new pb::MessageParser<C2S_ResetGameState>(() => new C2S_ResetGameState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_ResetGameState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PbTest.TestReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_ResetGameState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_ResetGameState(C2S_ResetGameState other) : this() {
      playerList_ = other.playerList_.Clone();
      tileList_ = other.tileList_.Clone();
      troopStackList_ = other.troopStackList_.Clone();
      buildingList_ = other.buildingList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_ResetGameState Clone() {
      return new C2S_ResetGameState(this);
    }

    /// <summary>Field number for the "PlayerList" field.</summary>
    public const int PlayerListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::PbBase.Player> _repeated_playerList_codec
        = pb::FieldCodec.ForMessage(10, global::PbBase.Player.Parser);
    private readonly pbc::RepeatedField<global::PbBase.Player> playerList_ = new pbc::RepeatedField<global::PbBase.Player>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PbBase.Player> PlayerList {
      get { return playerList_; }
    }

    /// <summary>Field number for the "TileList" field.</summary>
    public const int TileListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::PbBase.Tile> _repeated_tileList_codec
        = pb::FieldCodec.ForMessage(18, global::PbBase.Tile.Parser);
    private readonly pbc::RepeatedField<global::PbBase.Tile> tileList_ = new pbc::RepeatedField<global::PbBase.Tile>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PbBase.Tile> TileList {
      get { return tileList_; }
    }

    /// <summary>Field number for the "TroopStackList" field.</summary>
    public const int TroopStackListFieldNumber = 3;
    private static readonly pb::FieldCodec<global::PbBase.TroopStack> _repeated_troopStackList_codec
        = pb::FieldCodec.ForMessage(26, global::PbBase.TroopStack.Parser);
    private readonly pbc::RepeatedField<global::PbBase.TroopStack> troopStackList_ = new pbc::RepeatedField<global::PbBase.TroopStack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PbBase.TroopStack> TroopStackList {
      get { return troopStackList_; }
    }

    /// <summary>Field number for the "BuildingList" field.</summary>
    public const int BuildingListFieldNumber = 4;
    private static readonly pb::FieldCodec<global::PbBase.Building> _repeated_buildingList_codec
        = pb::FieldCodec.ForMessage(34, global::PbBase.Building.Parser);
    private readonly pbc::RepeatedField<global::PbBase.Building> buildingList_ = new pbc::RepeatedField<global::PbBase.Building>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PbBase.Building> BuildingList {
      get { return buildingList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_ResetGameState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_ResetGameState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!playerList_.Equals(other.playerList_)) return false;
      if(!tileList_.Equals(other.tileList_)) return false;
      if(!troopStackList_.Equals(other.troopStackList_)) return false;
      if(!buildingList_.Equals(other.buildingList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= playerList_.GetHashCode();
      hash ^= tileList_.GetHashCode();
      hash ^= troopStackList_.GetHashCode();
      hash ^= buildingList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      playerList_.WriteTo(output, _repeated_playerList_codec);
      tileList_.WriteTo(output, _repeated_tileList_codec);
      troopStackList_.WriteTo(output, _repeated_troopStackList_codec);
      buildingList_.WriteTo(output, _repeated_buildingList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += playerList_.CalculateSize(_repeated_playerList_codec);
      size += tileList_.CalculateSize(_repeated_tileList_codec);
      size += troopStackList_.CalculateSize(_repeated_troopStackList_codec);
      size += buildingList_.CalculateSize(_repeated_buildingList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_ResetGameState other) {
      if (other == null) {
        return;
      }
      playerList_.Add(other.playerList_);
      tileList_.Add(other.tileList_);
      troopStackList_.Add(other.troopStackList_);
      buildingList_.Add(other.buildingList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            playerList_.AddEntriesFrom(input, _repeated_playerList_codec);
            break;
          }
          case 18: {
            tileList_.AddEntriesFrom(input, _repeated_tileList_codec);
            break;
          }
          case 26: {
            troopStackList_.AddEntriesFrom(input, _repeated_troopStackList_codec);
            break;
          }
          case 34: {
            buildingList_.AddEntriesFrom(input, _repeated_buildingList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// [blocking] Result of reset gameState
  /// </summary>
  public sealed partial class S2C_ResetGameState : pb::IMessage<S2C_ResetGameState> {
    private static readonly pb::MessageParser<S2C_ResetGameState> _parser = new pb::MessageParser<S2C_ResetGameState>(() => new S2C_ResetGameState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_ResetGameState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PbTest.TestReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_ResetGameState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_ResetGameState(S2C_ResetGameState other) : this() {
      playerList_ = other.playerList_.Clone();
      tileList_ = other.tileList_.Clone();
      troopStackList_ = other.troopStackList_.Clone();
      buildingList_ = other.buildingList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_ResetGameState Clone() {
      return new S2C_ResetGameState(this);
    }

    /// <summary>Field number for the "PlayerList" field.</summary>
    public const int PlayerListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::PbBase.Player> _repeated_playerList_codec
        = pb::FieldCodec.ForMessage(10, global::PbBase.Player.Parser);
    private readonly pbc::RepeatedField<global::PbBase.Player> playerList_ = new pbc::RepeatedField<global::PbBase.Player>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PbBase.Player> PlayerList {
      get { return playerList_; }
    }

    /// <summary>Field number for the "TileList" field.</summary>
    public const int TileListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::PbBase.Tile> _repeated_tileList_codec
        = pb::FieldCodec.ForMessage(18, global::PbBase.Tile.Parser);
    private readonly pbc::RepeatedField<global::PbBase.Tile> tileList_ = new pbc::RepeatedField<global::PbBase.Tile>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PbBase.Tile> TileList {
      get { return tileList_; }
    }

    /// <summary>Field number for the "TroopStackList" field.</summary>
    public const int TroopStackListFieldNumber = 3;
    private static readonly pb::FieldCodec<global::PbBase.TroopStack> _repeated_troopStackList_codec
        = pb::FieldCodec.ForMessage(26, global::PbBase.TroopStack.Parser);
    private readonly pbc::RepeatedField<global::PbBase.TroopStack> troopStackList_ = new pbc::RepeatedField<global::PbBase.TroopStack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PbBase.TroopStack> TroopStackList {
      get { return troopStackList_; }
    }

    /// <summary>Field number for the "BuildingList" field.</summary>
    public const int BuildingListFieldNumber = 4;
    private static readonly pb::FieldCodec<global::PbBase.Building> _repeated_buildingList_codec
        = pb::FieldCodec.ForMessage(34, global::PbBase.Building.Parser);
    private readonly pbc::RepeatedField<global::PbBase.Building> buildingList_ = new pbc::RepeatedField<global::PbBase.Building>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PbBase.Building> BuildingList {
      get { return buildingList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_ResetGameState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_ResetGameState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!playerList_.Equals(other.playerList_)) return false;
      if(!tileList_.Equals(other.tileList_)) return false;
      if(!troopStackList_.Equals(other.troopStackList_)) return false;
      if(!buildingList_.Equals(other.buildingList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= playerList_.GetHashCode();
      hash ^= tileList_.GetHashCode();
      hash ^= troopStackList_.GetHashCode();
      hash ^= buildingList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      playerList_.WriteTo(output, _repeated_playerList_codec);
      tileList_.WriteTo(output, _repeated_tileList_codec);
      troopStackList_.WriteTo(output, _repeated_troopStackList_codec);
      buildingList_.WriteTo(output, _repeated_buildingList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += playerList_.CalculateSize(_repeated_playerList_codec);
      size += tileList_.CalculateSize(_repeated_tileList_codec);
      size += troopStackList_.CalculateSize(_repeated_troopStackList_codec);
      size += buildingList_.CalculateSize(_repeated_buildingList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_ResetGameState other) {
      if (other == null) {
        return;
      }
      playerList_.Add(other.playerList_);
      tileList_.Add(other.tileList_);
      troopStackList_.Add(other.troopStackList_);
      buildingList_.Add(other.buildingList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            playerList_.AddEntriesFrom(input, _repeated_playerList_codec);
            break;
          }
          case 18: {
            tileList_.AddEntriesFrom(input, _repeated_tileList_codec);
            break;
          }
          case 26: {
            troopStackList_.AddEntriesFrom(input, _repeated_troopStackList_codec);
            break;
          }
          case 34: {
            buildingList_.AddEntriesFrom(input, _repeated_buildingList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Message used in integration test
  /// </summary>
  public sealed partial class C2S_Test : pb::IMessage<C2S_Test> {
    private static readonly pb::MessageParser<C2S_Test> _parser = new pb::MessageParser<C2S_Test>(() => new C2S_Test());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_Test> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PbTest.TestReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_Test() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_Test(C2S_Test other) : this() {
      bookInfos_ = other.bookInfos_.Clone();
      identityPayload_ = other.identityPayload_ != null ? other.identityPayload_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_Test Clone() {
      return new C2S_Test(this);
    }

    /// <summary>Field number for the "bookInfos" field.</summary>
    public const int BookInfosFieldNumber = 1;
    private static readonly pb::FieldCodec<global::PbTest.TestBookInfo> _repeated_bookInfos_codec
        = pb::FieldCodec.ForMessage(10, global::PbTest.TestBookInfo.Parser);
    private readonly pbc::RepeatedField<global::PbTest.TestBookInfo> bookInfos_ = new pbc::RepeatedField<global::PbTest.TestBookInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PbTest.TestBookInfo> BookInfos {
      get { return bookInfos_; }
    }

    /// <summary>Field number for the "IdentityPayload" field.</summary>
    public const int IdentityPayloadFieldNumber = 2;
    private global::PbBase.IdentityPayload identityPayload_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PbBase.IdentityPayload IdentityPayload {
      get { return identityPayload_; }
      set {
        identityPayload_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_Test);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_Test other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!bookInfos_.Equals(other.bookInfos_)) return false;
      if (!object.Equals(IdentityPayload, other.IdentityPayload)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= bookInfos_.GetHashCode();
      if (identityPayload_ != null) hash ^= IdentityPayload.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      bookInfos_.WriteTo(output, _repeated_bookInfos_codec);
      if (identityPayload_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(IdentityPayload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += bookInfos_.CalculateSize(_repeated_bookInfos_codec);
      if (identityPayload_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IdentityPayload);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_Test other) {
      if (other == null) {
        return;
      }
      bookInfos_.Add(other.bookInfos_);
      if (other.identityPayload_ != null) {
        if (identityPayload_ == null) {
          IdentityPayload = new global::PbBase.IdentityPayload();
        }
        IdentityPayload.MergeFrom(other.IdentityPayload);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            bookInfos_.AddEntriesFrom(input, _repeated_bookInfos_codec);
            break;
          }
          case 18: {
            if (identityPayload_ == null) {
              IdentityPayload = new global::PbBase.IdentityPayload();
            }
            input.ReadMessage(IdentityPayload);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TestBookInfo : pb::IMessage<TestBookInfo> {
    private static readonly pb::MessageParser<TestBookInfo> _parser = new pb::MessageParser<TestBookInfo>(() => new TestBookInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TestBookInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PbTest.TestReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestBookInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestBookInfo(TestBookInfo other) : this() {
      op_ = other.op_;
      author_ = other.author_;
      title_ = other.title_;
      entity_ = other.entity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestBookInfo Clone() {
      return new TestBookInfo(this);
    }

    /// <summary>Field number for the "op" field.</summary>
    public const int OpFieldNumber = 1;
    private global::PbTest.Operation op_ = global::PbTest.Operation.Add;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PbTest.Operation Op {
      get { return op_; }
      set {
        op_ = value;
      }
    }

    /// <summary>Field number for the "author" field.</summary>
    public const int AuthorFieldNumber = 2;
    private string author_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Author {
      get { return author_; }
      set {
        author_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 3;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "entity" field.</summary>
    public const int EntityFieldNumber = 4;
    private long entity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Entity {
      get { return entity_; }
      set {
        entity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TestBookInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TestBookInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Op != other.Op) return false;
      if (Author != other.Author) return false;
      if (Title != other.Title) return false;
      if (Entity != other.Entity) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Op != global::PbTest.Operation.Add) hash ^= Op.GetHashCode();
      if (Author.Length != 0) hash ^= Author.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Entity != 0L) hash ^= Entity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Op != global::PbTest.Operation.Add) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Op);
      }
      if (Author.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Author);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Title);
      }
      if (Entity != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Entity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Op != global::PbTest.Operation.Add) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Op);
      }
      if (Author.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Author);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Entity != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Entity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TestBookInfo other) {
      if (other == null) {
        return;
      }
      if (other.Op != global::PbTest.Operation.Add) {
        Op = other.Op;
      }
      if (other.Author.Length != 0) {
        Author = other.Author;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Entity != 0L) {
        Entity = other.Entity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Op = (global::PbTest.Operation) input.ReadEnum();
            break;
          }
          case 18: {
            Author = input.ReadString();
            break;
          }
          case 26: {
            Title = input.ReadString();
            break;
          }
          case 32: {
            Entity = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2C_Test : pb::IMessage<S2C_Test> {
    private static readonly pb::MessageParser<S2C_Test> _parser = new pb::MessageParser<S2C_Test>(() => new S2C_Test());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_Test> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PbTest.TestReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_Test() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_Test(S2C_Test other) : this() {
      entity_ = other.entity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_Test Clone() {
      return new S2C_Test(this);
    }

    /// <summary>Field number for the "entity" field.</summary>
    public const int EntityFieldNumber = 1;
    private long entity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Entity {
      get { return entity_; }
      set {
        entity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_Test);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_Test other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entity != other.Entity) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Entity != 0L) hash ^= Entity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Entity != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Entity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Entity != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Entity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_Test other) {
      if (other == null) {
        return;
      }
      if (other.Entity != 0L) {
        Entity = other.Entity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entity = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
