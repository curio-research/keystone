// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.9.2
// source: base.proto

package pb_base

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TroopStackType int32

const (
	TroopStackType_Infantry TroopStackType = 0
	TroopStackType_Tank     TroopStackType = 1
	TroopStackType_Fort     TroopStackType = 2
	TroopStackType_Plane    TroopStackType = 3
)

// Enum value maps for TroopStackType.
var (
	TroopStackType_name = map[int32]string{
		0: "Infantry",
		1: "Tank",
		2: "Fort",
		3: "Plane",
	}
	TroopStackType_value = map[string]int32{
		"Infantry": 0,
		"Tank":     1,
		"Fort":     2,
		"Plane":    3,
	}
)

func (x TroopStackType) Enum() *TroopStackType {
	p := new(TroopStackType)
	*p = x
	return p
}

func (x TroopStackType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TroopStackType) Descriptor() protoreflect.EnumDescriptor {
	return file_base_proto_enumTypes[0].Descriptor()
}

func (TroopStackType) Type() protoreflect.EnumType {
	return &file_base_proto_enumTypes[0]
}

func (x TroopStackType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TroopStackType.Descriptor instead.
func (TroopStackType) EnumDescriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{0}
}

type BuildingType int32

const (
	BuildingType_TechCenter    BuildingType = 0
	BuildingType_TradeCenter   BuildingType = 1
	BuildingType_CapitalCenter BuildingType = 9999
)

// Enum value maps for BuildingType.
var (
	BuildingType_name = map[int32]string{
		0:    "TechCenter",
		1:    "TradeCenter",
		9999: "CapitalCenter",
	}
	BuildingType_value = map[string]int32{
		"TechCenter":    0,
		"TradeCenter":   1,
		"CapitalCenter": 9999,
	}
)

func (x BuildingType) Enum() *BuildingType {
	p := new(BuildingType)
	*p = x
	return p
}

func (x BuildingType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BuildingType) Descriptor() protoreflect.EnumDescriptor {
	return file_base_proto_enumTypes[1].Descriptor()
}

func (BuildingType) Type() protoreflect.EnumType {
	return &file_base_proto_enumTypes[1]
}

func (x BuildingType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BuildingType.Descriptor instead.
func (BuildingType) EnumDescriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{1}
}

type CardSuit int32

const (
	CardSuit_Heart   CardSuit = 0
	CardSuit_Spade   CardSuit = 1
	CardSuit_Club    CardSuit = 2
	CardSuit_Diamond CardSuit = 3
)

// Enum value maps for CardSuit.
var (
	CardSuit_name = map[int32]string{
		0: "Heart",
		1: "Spade",
		2: "Club",
		3: "Diamond",
	}
	CardSuit_value = map[string]int32{
		"Heart":   0,
		"Spade":   1,
		"Club":    2,
		"Diamond": 3,
	}
)

func (x CardSuit) Enum() *CardSuit {
	p := new(CardSuit)
	*p = x
	return p
}

func (x CardSuit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CardSuit) Descriptor() protoreflect.EnumDescriptor {
	return file_base_proto_enumTypes[2].Descriptor()
}

func (CardSuit) Type() protoreflect.EnumType {
	return &file_base_proto_enumTypes[2]
}

func (x CardSuit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CardSuit.Descriptor instead.
func (CardSuit) EnumDescriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{2}
}

type CardDeckType int32

const (
	CardDeckType_ToDeal              CardDeckType = 0
	CardDeckType_Dealing             CardDeckType = 1
	CardDeckType_InHand              CardDeckType = 2
	CardDeckType_DiscardCurrentRound CardDeckType = 3
	CardDeckType_DiscardLastRound    CardDeckType = 4
	CardDeckType_Public              CardDeckType = 5
)

// Enum value maps for CardDeckType.
var (
	CardDeckType_name = map[int32]string{
		0: "ToDeal",
		1: "Dealing",
		2: "InHand",
		3: "DiscardCurrentRound",
		4: "DiscardLastRound",
		5: "Public",
	}
	CardDeckType_value = map[string]int32{
		"ToDeal":              0,
		"Dealing":             1,
		"InHand":              2,
		"DiscardCurrentRound": 3,
		"DiscardLastRound":    4,
		"Public":              5,
	}
)

func (x CardDeckType) Enum() *CardDeckType {
	p := new(CardDeckType)
	*p = x
	return p
}

func (x CardDeckType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CardDeckType) Descriptor() protoreflect.EnumDescriptor {
	return file_base_proto_enumTypes[3].Descriptor()
}

func (CardDeckType) Type() protoreflect.EnumType {
	return &file_base_proto_enumTypes[3]
}

func (x CardDeckType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CardDeckType.Descriptor instead.
func (CardDeckType) EnumDescriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{3}
}

type TurnStage int32

const (
	TurnStage_ClaimCards TurnStage = 0
	TurnStage_Play       TurnStage = 1
)

// Enum value maps for TurnStage.
var (
	TurnStage_name = map[int32]string{
		0: "ClaimCards",
		1: "Play",
	}
	TurnStage_value = map[string]int32{
		"ClaimCards": 0,
		"Play":       1,
	}
)

func (x TurnStage) Enum() *TurnStage {
	p := new(TurnStage)
	*p = x
	return p
}

func (x TurnStage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TurnStage) Descriptor() protoreflect.EnumDescriptor {
	return file_base_proto_enumTypes[4].Descriptor()
}

func (TurnStage) Type() protoreflect.EnumType {
	return &file_base_proto_enumTypes[4]
}

func (x TurnStage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TurnStage.Descriptor instead.
func (TurnStage) EnumDescriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{4}
}

type GameStage int32

const (
	GameStage_Preparation GameStage = 0
	GameStage_Ongoing     GameStage = 1
	GameStage_End         GameStage = 2
)

// Enum value maps for GameStage.
var (
	GameStage_name = map[int32]string{
		0: "Preparation",
		1: "Ongoing",
		2: "End",
	}
	GameStage_value = map[string]int32{
		"Preparation": 0,
		"Ongoing":     1,
		"End":         2,
	}
)

func (x GameStage) Enum() *GameStage {
	p := new(GameStage)
	*p = x
	return p
}

func (x GameStage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameStage) Descriptor() protoreflect.EnumDescriptor {
	return file_base_proto_enumTypes[5].Descriptor()
}

func (GameStage) Type() protoreflect.EnumType {
	return &file_base_proto_enumTypes[5]
}

func (x GameStage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameStage.Descriptor instead.
func (GameStage) EnumDescriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{5}
}

type BluePrintType int32

const (
	BluePrintType_PlaneBluePrint BluePrintType = 0
	BluePrintType_FortBluePrint  BluePrintType = 1
)

// Enum value maps for BluePrintType.
var (
	BluePrintType_name = map[int32]string{
		0: "PlaneBluePrint",
		1: "FortBluePrint",
	}
	BluePrintType_value = map[string]int32{
		"PlaneBluePrint": 0,
		"FortBluePrint":  1,
	}
)

func (x BluePrintType) Enum() *BluePrintType {
	p := new(BluePrintType)
	*p = x
	return p
}

func (x BluePrintType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BluePrintType) Descriptor() protoreflect.EnumDescriptor {
	return file_base_proto_enumTypes[6].Descriptor()
}

func (BluePrintType) Type() protoreflect.EnumType {
	return &file_base_proto_enumTypes[6]
}

func (x BluePrintType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BluePrintType.Descriptor instead.
func (BluePrintType) EnumDescriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{6}
}

type PlayerRole int32

const (
	PlayerRole_NonDealer PlayerRole = 0
	PlayerRole_Dealer    PlayerRole = 1
)

// Enum value maps for PlayerRole.
var (
	PlayerRole_name = map[int32]string{
		0: "NonDealer",
		1: "Dealer",
	}
	PlayerRole_value = map[string]int32{
		"NonDealer": 0,
		"Dealer":    1,
	}
)

func (x PlayerRole) Enum() *PlayerRole {
	p := new(PlayerRole)
	*p = x
	return p
}

func (x PlayerRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerRole) Descriptor() protoreflect.EnumDescriptor {
	return file_base_proto_enumTypes[7].Descriptor()
}

func (PlayerRole) Type() protoreflect.EnumType {
	return &file_base_proto_enumTypes[7]
}

func (x PlayerRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerRole.Descriptor instead.
func (PlayerRole) EnumDescriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{7}
}

type PlayerStage int32

const (
	PlayerStage_Waiting PlayerStage = 0
	PlayerStage_Ready   PlayerStage = 1
	PlayerStage_InGame  PlayerStage = 2
)

// Enum value maps for PlayerStage.
var (
	PlayerStage_name = map[int32]string{
		0: "Waiting",
		1: "Ready",
		2: "InGame",
	}
	PlayerStage_value = map[string]int32{
		"Waiting": 0,
		"Ready":   1,
		"InGame":  2,
	}
)

func (x PlayerStage) Enum() *PlayerStage {
	p := new(PlayerStage)
	*p = x
	return p
}

func (x PlayerStage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerStage) Descriptor() protoreflect.EnumDescriptor {
	return file_base_proto_enumTypes[8].Descriptor()
}

func (PlayerStage) Type() protoreflect.EnumType {
	return &file_base_proto_enumTypes[8]
}

func (x PlayerStage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerStage.Descriptor instead.
func (PlayerStage) EnumDescriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{8}
}

// Logic Position Struct
type Position struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X int32 `protobuf:"varint,1,opt,name=X,proto3" json:"X,omitempty"`
	Y int32 `protobuf:"varint,2,opt,name=Y,proto3" json:"Y,omitempty"`
}

func (x *Position) Reset() {
	*x = Position{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position) ProtoMessage() {}

func (x *Position) ProtoReflect() protoreflect.Message {
	mi := &file_base_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position.ProtoReflect.Descriptor instead.
func (*Position) Descriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{0}
}

func (x *Position) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Position) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

// Every Stack's move plan
type MovePlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginalStack *TroopStack `protobuf:"bytes,1,opt,name=OriginalStack,proto3" json:"OriginalStack,omitempty"`
	CurrentStack  *TroopStack `protobuf:"bytes,2,opt,name=CurrentStack,proto3" json:"CurrentStack,omitempty"`
	Path          []*Position `protobuf:"bytes,3,rep,name=Path,proto3" json:"Path,omitempty"`
}

func (x *MovePlan) Reset() {
	*x = MovePlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovePlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovePlan) ProtoMessage() {}

func (x *MovePlan) ProtoReflect() protoreflect.Message {
	mi := &file_base_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovePlan.ProtoReflect.Descriptor instead.
func (*MovePlan) Descriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{1}
}

func (x *MovePlan) GetOriginalStack() *TroopStack {
	if x != nil {
		return x.OriginalStack
	}
	return nil
}

func (x *MovePlan) GetCurrentStack() *TroopStack {
	if x != nil {
		return x.CurrentStack
	}
	return nil
}

func (x *MovePlan) GetPath() []*Position {
	if x != nil {
		return x.Path
	}
	return nil
}

type SimpleMovePlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64       `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	StackId int64       `protobuf:"varint,2,opt,name=StackId,proto3" json:"StackId,omitempty"`
	Path    []*Position `protobuf:"bytes,3,rep,name=Path,proto3" json:"Path,omitempty"`
}

func (x *SimpleMovePlan) Reset() {
	*x = SimpleMovePlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleMovePlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleMovePlan) ProtoMessage() {}

func (x *SimpleMovePlan) ProtoReflect() protoreflect.Message {
	mi := &file_base_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleMovePlan.ProtoReflect.Descriptor instead.
func (*SimpleMovePlan) Descriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{2}
}

func (x *SimpleMovePlan) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SimpleMovePlan) GetStackId() int64 {
	if x != nil {
		return x.StackId
	}
	return 0
}

func (x *SimpleMovePlan) GetPath() []*Position {
	if x != nil {
		return x.Path
	}
	return nil
}

// Player Information
type Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64       `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name        string      `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Role        PlayerRole  `protobuf:"varint,3,opt,name=Role,proto3,enum=pb_base.PlayerRole" json:"Role,omitempty"`
	Stage       PlayerStage `protobuf:"varint,4,opt,name=Stage,proto3,enum=pb_base.PlayerStage" json:"Stage,omitempty"`
	AttackPoint int32       `protobuf:"varint,5,opt,name=AttackPoint,proto3" json:"AttackPoint,omitempty"`
	TradePoint  int32       `protobuf:"varint,6,opt,name=TradePoint,proto3" json:"TradePoint,omitempty"`
	Gold        int32       `protobuf:"varint,7,opt,name=Gold,proto3" json:"Gold,omitempty"`
}

func (x *Player) Reset() {
	*x = Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_base_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{3}
}

func (x *Player) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Player) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Player) GetRole() PlayerRole {
	if x != nil {
		return x.Role
	}
	return PlayerRole_NonDealer
}

func (x *Player) GetStage() PlayerStage {
	if x != nil {
		return x.Stage
	}
	return PlayerStage_Waiting
}

func (x *Player) GetAttackPoint() int32 {
	if x != nil {
		return x.AttackPoint
	}
	return 0
}

func (x *Player) GetTradePoint() int32 {
	if x != nil {
		return x.TradePoint
	}
	return 0
}

func (x *Player) GetGold() int32 {
	if x != nil {
		return x.Gold
	}
	return 0
}

// Tile Infomation
type Tile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64     `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	OwnerId  int64     `protobuf:"varint,2,opt,name=OwnerId,proto3" json:"OwnerId,omitempty"`
	Level    int32     `protobuf:"varint,3,opt,name=Level,proto3" json:"Level,omitempty"`
	Position *Position `protobuf:"bytes,4,opt,name=Position,proto3" json:"Position,omitempty"`
	Visible  bool      `protobuf:"varint,5,opt,name=Visible,proto3" json:"Visible,omitempty"`
}

func (x *Tile) Reset() {
	*x = Tile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tile) ProtoMessage() {}

func (x *Tile) ProtoReflect() protoreflect.Message {
	mi := &file_base_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tile.ProtoReflect.Descriptor instead.
func (*Tile) Descriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{4}
}

func (x *Tile) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Tile) GetOwnerId() int64 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

func (x *Tile) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Tile) GetPosition() *Position {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *Tile) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

// Capital Information
type Capital struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64     `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	OwnerId  int64     `protobuf:"varint,2,opt,name=OwnerId,proto3" json:"OwnerId,omitempty"`
	Level    int32     `protobuf:"varint,3,opt,name=Level,proto3" json:"Level,omitempty"`
	Position *Position `protobuf:"bytes,4,opt,name=Position,proto3" json:"Position,omitempty"`
}

func (x *Capital) Reset() {
	*x = Capital{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Capital) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Capital) ProtoMessage() {}

func (x *Capital) ProtoReflect() protoreflect.Message {
	mi := &file_base_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Capital.ProtoReflect.Descriptor instead.
func (*Capital) Descriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{5}
}

func (x *Capital) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Capital) GetOwnerId() int64 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

func (x *Capital) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Capital) GetPosition() *Position {
	if x != nil {
		return x.Position
	}
	return nil
}

type Talent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	OwnerId int64 `protobuf:"varint,2,opt,name=OwnerId,proto3" json:"OwnerId,omitempty"`
}

func (x *Talent) Reset() {
	*x = Talent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Talent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Talent) ProtoMessage() {}

func (x *Talent) ProtoReflect() protoreflect.Message {
	mi := &file_base_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Talent.ProtoReflect.Descriptor instead.
func (*Talent) Descriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{6}
}

func (x *Talent) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Talent) GetOwnerId() int64 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

// Building Information
type Building struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64        `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	OwnerId  int64        `protobuf:"varint,2,opt,name=OwnerId,proto3" json:"OwnerId,omitempty"`
	Level    int32        `protobuf:"varint,3,opt,name=Level,proto3" json:"Level,omitempty"`
	Position *Position    `protobuf:"bytes,4,opt,name=Position,proto3" json:"Position,omitempty"`
	Type     BuildingType `protobuf:"varint,5,opt,name=Type,proto3,enum=pb_base.BuildingType" json:"Type,omitempty"`
}

func (x *Building) Reset() {
	*x = Building{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Building) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Building) ProtoMessage() {}

func (x *Building) ProtoReflect() protoreflect.Message {
	mi := &file_base_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Building.ProtoReflect.Descriptor instead.
func (*Building) Descriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{7}
}

func (x *Building) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Building) GetOwnerId() int64 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

func (x *Building) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Building) GetPosition() *Position {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *Building) GetType() BuildingType {
	if x != nil {
		return x.Type
	}
	return BuildingType_TechCenter
}

// Troop Stack(A Group of troops in same type)
type TroopStack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64          `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	OwnerId         int64          `protobuf:"varint,2,opt,name=OwnerId,proto3" json:"OwnerId,omitempty"`
	Type            TroopStackType `protobuf:"varint,3,opt,name=Type,proto3,enum=pb_base.TroopStackType" json:"Type,omitempty"`
	Amount          int32          `protobuf:"varint,4,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Position        *Position      `protobuf:"bytes,5,opt,name=Position,proto3" json:"Position,omitempty"`
	MovementStamina int32          `protobuf:"varint,6,opt,name=MovementStamina,proto3" json:"MovementStamina,omitempty"`
	LoadedStackId   int64          `protobuf:"varint,7,opt,name=LoadedStackId,proto3" json:"LoadedStackId,omitempty"`
}

func (x *TroopStack) Reset() {
	*x = TroopStack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TroopStack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TroopStack) ProtoMessage() {}

func (x *TroopStack) ProtoReflect() protoreflect.Message {
	mi := &file_base_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TroopStack.ProtoReflect.Descriptor instead.
func (*TroopStack) Descriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{8}
}

func (x *TroopStack) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TroopStack) GetOwnerId() int64 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

func (x *TroopStack) GetType() TroopStackType {
	if x != nil {
		return x.Type
	}
	return TroopStackType_Infantry
}

func (x *TroopStack) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TroopStack) GetPosition() *Position {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *TroopStack) GetMovementStamina() int32 {
	if x != nil {
		return x.MovementStamina
	}
	return 0
}

func (x *TroopStack) GetLoadedStackId() int64 {
	if x != nil {
		return x.LoadedStackId
	}
	return 0
}

// Card
type Card struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64    `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	OwnerId int64    `protobuf:"varint,2,opt,name=OwnerId,proto3" json:"OwnerId,omitempty"`
	Suit    CardSuit `protobuf:"varint,3,opt,name=Suit,proto3,enum=pb_base.CardSuit" json:"Suit,omitempty"`
	Number  int32    `protobuf:"varint,4,opt,name=Number,proto3" json:"Number,omitempty"`
}

func (x *Card) Reset() {
	*x = Card{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card) ProtoMessage() {}

func (x *Card) ProtoReflect() protoreflect.Message {
	mi := &file_base_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card.ProtoReflect.Descriptor instead.
func (*Card) Descriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{9}
}

func (x *Card) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Card) GetOwnerId() int64 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

func (x *Card) GetSuit() CardSuit {
	if x != nil {
		return x.Suit
	}
	return CardSuit_Heart
}

func (x *Card) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

// Turn
type Turn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId   int64     `protobuf:"varint,1,opt,name=PlayerId,proto3" json:"PlayerId,omitempty"`
	RemainSecs int32     `protobuf:"varint,2,opt,name=RemainSecs,proto3" json:"RemainSecs,omitempty"`
	Stage      TurnStage `protobuf:"varint,3,opt,name=Stage,proto3,enum=pb_base.TurnStage" json:"Stage,omitempty"`
}

func (x *Turn) Reset() {
	*x = Turn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Turn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Turn) ProtoMessage() {}

func (x *Turn) ProtoReflect() protoreflect.Message {
	mi := &file_base_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Turn.ProtoReflect.Descriptor instead.
func (*Turn) Descriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{10}
}

func (x *Turn) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *Turn) GetRemainSecs() int32 {
	if x != nil {
		return x.RemainSecs
	}
	return 0
}

func (x *Turn) GetStage() TurnStage {
	if x != nil {
		return x.Stage
	}
	return TurnStage_ClaimCards
}

// Round
type Round struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"varint,1,opt,name=Count,proto3" json:"Count,omitempty"`
	Turn  *Turn `protobuf:"bytes,2,opt,name=Turn,proto3" json:"Turn,omitempty"`
}

func (x *Round) Reset() {
	*x = Round{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Round) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Round) ProtoMessage() {}

func (x *Round) ProtoReflect() protoreflect.Message {
	mi := &file_base_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Round.ProtoReflect.Descriptor instead.
func (*Round) Descriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{11}
}

func (x *Round) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Round) GetTurn() *Turn {
	if x != nil {
		return x.Turn
	}
	return nil
}

// Game
type Game struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId int32     `protobuf:"varint,1,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	Stage  GameStage `protobuf:"varint,2,opt,name=Stage,proto3,enum=pb_base.GameStage" json:"Stage,omitempty"`
}

func (x *Game) Reset() {
	*x = Game{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Game) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Game) ProtoMessage() {}

func (x *Game) ProtoReflect() protoreflect.Message {
	mi := &file_base_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Game.ProtoReflect.Descriptor instead.
func (*Game) Descriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{12}
}

func (x *Game) GetRoomId() int32 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *Game) GetStage() GameStage {
	if x != nil {
		return x.Stage
	}
	return GameStage_Preparation
}

// Token
type Token struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	OwnerId         int64 `protobuf:"varint,2,opt,name=OwnerId,proto3" json:"OwnerId,omitempty"`
	OriginalOwnerId int64 `protobuf:"varint,3,opt,name=OriginalOwnerId,proto3" json:"OriginalOwnerId,omitempty"`
}

func (x *Token) Reset() {
	*x = Token{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Token) ProtoMessage() {}

func (x *Token) ProtoReflect() protoreflect.Message {
	mi := &file_base_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Token.ProtoReflect.Descriptor instead.
func (*Token) Descriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{13}
}

func (x *Token) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Token) GetOwnerId() int64 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

func (x *Token) GetOriginalOwnerId() int64 {
	if x != nil {
		return x.OriginalOwnerId
	}
	return 0
}

// Blueprint
type Blueprint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64         `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	OwnerId int64         `protobuf:"varint,2,opt,name=OwnerId,proto3" json:"OwnerId,omitempty"`
	Type    BluePrintType `protobuf:"varint,3,opt,name=Type,proto3,enum=pb_base.BluePrintType" json:"Type,omitempty"`
}

func (x *Blueprint) Reset() {
	*x = Blueprint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Blueprint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Blueprint) ProtoMessage() {}

func (x *Blueprint) ProtoReflect() protoreflect.Message {
	mi := &file_base_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Blueprint.ProtoReflect.Descriptor instead.
func (*Blueprint) Descriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{14}
}

func (x *Blueprint) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Blueprint) GetOwnerId() int64 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

func (x *Blueprint) GetType() BluePrintType {
	if x != nil {
		return x.Type
	}
	return BluePrintType_PlaneBluePrint
}

// Card Deck
type CardDeck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardsDiscardLastRound []*Card `protobuf:"bytes,1,rep,name=CardsDiscardLastRound,proto3" json:"CardsDiscardLastRound,omitempty"` // discard cards
	CardsDealing          []*Card `protobuf:"bytes,2,rep,name=CardsDealing,proto3" json:"CardsDealing,omitempty"`                   // cards to deal
	CardsInHand           []*Card `protobuf:"bytes,3,rep,name=CardsInHand,proto3" json:"CardsInHand,omitempty"`                     // cards in hand
	CardsPublic           []*Card `protobuf:"bytes,4,rep,name=CardsPublic,proto3" json:"CardsPublic,omitempty"`                     // public cards
}

func (x *CardDeck) Reset() {
	*x = CardDeck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardDeck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardDeck) ProtoMessage() {}

func (x *CardDeck) ProtoReflect() protoreflect.Message {
	mi := &file_base_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardDeck.ProtoReflect.Descriptor instead.
func (*CardDeck) Descriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{15}
}

func (x *CardDeck) GetCardsDiscardLastRound() []*Card {
	if x != nil {
		return x.CardsDiscardLastRound
	}
	return nil
}

func (x *CardDeck) GetCardsDealing() []*Card {
	if x != nil {
		return x.CardsDealing
	}
	return nil
}

func (x *CardDeck) GetCardsInHand() []*Card {
	if x != nil {
		return x.CardsInHand
	}
	return nil
}

func (x *CardDeck) GetCardsPublic() []*Card {
	if x != nil {
		return x.CardsPublic
	}
	return nil
}

// User Identity infomation to determine who is the player
type IdentityPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JwtToken string `protobuf:"bytes,1,opt,name=JwtToken,proto3" json:"JwtToken,omitempty"`
	PlayerId int64  `protobuf:"varint,2,opt,name=PlayerId,proto3" json:"PlayerId,omitempty"`
}

func (x *IdentityPayload) Reset() {
	*x = IdentityPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdentityPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentityPayload) ProtoMessage() {}

func (x *IdentityPayload) ProtoReflect() protoreflect.Message {
	mi := &file_base_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentityPayload.ProtoReflect.Descriptor instead.
func (*IdentityPayload) Descriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{16}
}

func (x *IdentityPayload) GetJwtToken() string {
	if x != nil {
		return x.JwtToken
	}
	return ""
}

func (x *IdentityPayload) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

var File_base_proto protoreflect.FileDescriptor

var file_base_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x70, 0x62,
	0x5f, 0x62, 0x61, 0x73, 0x65, 0x22, 0x26, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0c, 0x0a, 0x01, 0x58, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x58, 0x12,
	0x0c, 0x0a, 0x01, 0x59, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x59, 0x22, 0xa5, 0x01,
	0x0a, 0x08, 0x4d, 0x6f, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x39, 0x0a, 0x0d, 0x4f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x54, 0x72, 0x6f, 0x6f,
	0x70, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x52, 0x0d, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x53, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x37, 0x0a, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62,
	0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x54, 0x72, 0x6f, 0x6f, 0x70, 0x53, 0x74, 0x61, 0x63, 0x6b,
	0x52, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x25,
	0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70,
	0x62, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x04, 0x50, 0x61, 0x74, 0x68, 0x22, 0x61, 0x0a, 0x0e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4d,
	0x6f, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x63, 0x6b,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x49,
	0x64, 0x12, 0x25, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x70, 0x62, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x22, 0xd7, 0x01, 0x0a, 0x06, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65,
	0x12, 0x2a, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x14, 0x2e, 0x70, 0x62, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x05, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x54, 0x72, 0x61, 0x64, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x54, 0x72, 0x61, 0x64, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x47, 0x6f, 0x6c, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x47, 0x6f,
	0x6c, 0x64, 0x22, 0x8f, 0x01, 0x0a, 0x04, 0x54, 0x69, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2d, 0x0a, 0x08, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x70, 0x62, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x69,
	0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x56, 0x69, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x22, 0x78, 0x0a, 0x07, 0x43, 0x61, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x2d, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32,
	0x0a, 0x06, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x49, 0x64, 0x22, 0xa4, 0x01, 0x0a, 0x08, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x2d, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70,
	0x62, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x22, 0xfa, 0x01, 0x0a, 0x0a, 0x54, 0x72,
	0x6f, 0x6f, 0x70, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x17, 0x2e, 0x70, 0x62, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x54, 0x72, 0x6f, 0x6f, 0x70,
	0x53, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x5f, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61,
	0x12, 0x24, 0x0a, 0x0d, 0x4c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x49,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x4c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x53,
	0x74, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x22, 0x6f, 0x0a, 0x04, 0x43, 0x61, 0x72, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x04, 0x53, 0x75, 0x69, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x5f, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x43, 0x61, 0x72, 0x64, 0x53, 0x75, 0x69, 0x74, 0x52, 0x04, 0x53, 0x75, 0x69, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x6c, 0x0a, 0x04, 0x54, 0x75, 0x72, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x52,
	0x65, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x63, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x63, 0x73, 0x12, 0x28, 0x0a, 0x05, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x5f,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x54, 0x75, 0x72, 0x6e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x05,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x22, 0x40, 0x0a, 0x05, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x04, 0x54, 0x75, 0x72, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x54, 0x75, 0x72,
	0x6e, 0x52, 0x04, 0x54, 0x75, 0x72, 0x6e, 0x22, 0x48, 0x0a, 0x04, 0x47, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x5f, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x05, 0x53, 0x74, 0x61, 0x67,
	0x65, 0x22, 0x5b, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x4f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0x61,
	0x0a, 0x09, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x6c,
	0x75, 0x65, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x22, 0xe4, 0x01, 0x0a, 0x08, 0x43, 0x61, 0x72, 0x64, 0x44, 0x65, 0x63, 0x6b, 0x12, 0x43,
	0x0a, 0x15, 0x43, 0x61, 0x72, 0x64, 0x73, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x4c, 0x61,
	0x73, 0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x70, 0x62, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x15, 0x43, 0x61,
	0x72, 0x64, 0x73, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x4c, 0x61, 0x73, 0x74, 0x52, 0x6f,
	0x75, 0x6e, 0x64, 0x12, 0x31, 0x0a, 0x0c, 0x43, 0x61, 0x72, 0x64, 0x73, 0x44, 0x65, 0x61, 0x6c,
	0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x5f, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0c, 0x43, 0x61, 0x72, 0x64, 0x73, 0x44,
	0x65, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x2f, 0x0a, 0x0b, 0x43, 0x61, 0x72, 0x64, 0x73, 0x49,
	0x6e, 0x48, 0x61, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62,
	0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0b, 0x43, 0x61, 0x72, 0x64,
	0x73, 0x49, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x12, 0x2f, 0x0a, 0x0b, 0x43, 0x61, 0x72, 0x64, 0x73,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70,
	0x62, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0b, 0x43, 0x61, 0x72,
	0x64, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x22, 0x49, 0x0a, 0x0f, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x4a,
	0x77, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4a,
	0x77, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x64, 0x2a, 0x3d, 0x0a, 0x0e, 0x54, 0x72, 0x6f, 0x6f, 0x70, 0x53, 0x74, 0x61, 0x63,
	0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x6e, 0x66, 0x61, 0x6e, 0x74, 0x72,
	0x79, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x61, 0x6e, 0x6b, 0x10, 0x01, 0x12, 0x08, 0x0a,
	0x04, 0x46, 0x6f, 0x72, 0x74, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x6c, 0x61, 0x6e, 0x65,
	0x10, 0x03, 0x2a, 0x43, 0x0a, 0x0c, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x65, 0x63, 0x68, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x64, 0x65, 0x43, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0d, 0x43, 0x61, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x43, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x10, 0x8f, 0x4e, 0x2a, 0x37, 0x0a, 0x08, 0x43, 0x61, 0x72, 0x64, 0x53,
	0x75, 0x69, 0x74, 0x12, 0x09, 0x0a, 0x05, 0x48, 0x65, 0x61, 0x72, 0x74, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x53, 0x70, 0x61, 0x64, 0x65, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x6c, 0x75,
	0x62, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x10, 0x03,
	0x2a, 0x6e, 0x0a, 0x0c, 0x43, 0x61, 0x72, 0x64, 0x44, 0x65, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0a, 0x0a, 0x06, 0x54, 0x6f, 0x44, 0x65, 0x61, 0x6c, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x44, 0x65, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x6e, 0x48,
	0x61, 0x6e, 0x64, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0x03, 0x12, 0x14,
	0x0a, 0x10, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x4c, 0x61, 0x73, 0x74, 0x52, 0x6f, 0x75,
	0x6e, 0x64, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x10, 0x05,
	0x2a, 0x25, 0x0a, 0x09, 0x54, 0x75, 0x72, 0x6e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a,
	0x0a, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x73, 0x10, 0x00, 0x12, 0x08, 0x0a,
	0x04, 0x50, 0x6c, 0x61, 0x79, 0x10, 0x01, 0x2a, 0x32, 0x0a, 0x09, 0x47, 0x61, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x6e, 0x67, 0x6f, 0x69, 0x6e, 0x67,
	0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x6e, 0x64, 0x10, 0x02, 0x2a, 0x36, 0x0a, 0x0d, 0x42,
	0x6c, 0x75, 0x65, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e,
	0x50, 0x6c, 0x61, 0x6e, 0x65, 0x42, 0x6c, 0x75, 0x65, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x10, 0x00,
	0x12, 0x11, 0x0a, 0x0d, 0x46, 0x6f, 0x72, 0x74, 0x42, 0x6c, 0x75, 0x65, 0x50, 0x72, 0x69, 0x6e,
	0x74, 0x10, 0x01, 0x2a, 0x27, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x6f, 0x6c,
	0x65, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x6f, 0x6e, 0x44, 0x65, 0x61, 0x6c, 0x65, 0x72, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x44, 0x65, 0x61, 0x6c, 0x65, 0x72, 0x10, 0x01, 0x2a, 0x31, 0x0a, 0x0b,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x57,
	0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x65, 0x61, 0x64,
	0x79, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x10, 0x02, 0x42,
	0x09, 0x5a, 0x07, 0x70, 0x62, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_base_proto_rawDescOnce sync.Once
	file_base_proto_rawDescData = file_base_proto_rawDesc
)

func file_base_proto_rawDescGZIP() []byte {
	file_base_proto_rawDescOnce.Do(func() {
		file_base_proto_rawDescData = protoimpl.X.CompressGZIP(file_base_proto_rawDescData)
	})
	return file_base_proto_rawDescData
}

var file_base_proto_enumTypes = make([]protoimpl.EnumInfo, 9)
var file_base_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_base_proto_goTypes = []interface{}{
	(TroopStackType)(0),     // 0: pb_base.TroopStackType
	(BuildingType)(0),       // 1: pb_base.BuildingType
	(CardSuit)(0),           // 2: pb_base.CardSuit
	(CardDeckType)(0),       // 3: pb_base.CardDeckType
	(TurnStage)(0),          // 4: pb_base.TurnStage
	(GameStage)(0),          // 5: pb_base.GameStage
	(BluePrintType)(0),      // 6: pb_base.BluePrintType
	(PlayerRole)(0),         // 7: pb_base.PlayerRole
	(PlayerStage)(0),        // 8: pb_base.PlayerStage
	(*Position)(nil),        // 9: pb_base.Position
	(*MovePlan)(nil),        // 10: pb_base.MovePlan
	(*SimpleMovePlan)(nil),  // 11: pb_base.SimpleMovePlan
	(*Player)(nil),          // 12: pb_base.Player
	(*Tile)(nil),            // 13: pb_base.Tile
	(*Capital)(nil),         // 14: pb_base.Capital
	(*Talent)(nil),          // 15: pb_base.Talent
	(*Building)(nil),        // 16: pb_base.Building
	(*TroopStack)(nil),      // 17: pb_base.TroopStack
	(*Card)(nil),            // 18: pb_base.Card
	(*Turn)(nil),            // 19: pb_base.Turn
	(*Round)(nil),           // 20: pb_base.Round
	(*Game)(nil),            // 21: pb_base.Game
	(*Token)(nil),           // 22: pb_base.Token
	(*Blueprint)(nil),       // 23: pb_base.Blueprint
	(*CardDeck)(nil),        // 24: pb_base.CardDeck
	(*IdentityPayload)(nil), // 25: pb_base.IdentityPayload
}
var file_base_proto_depIdxs = []int32{
	17, // 0: pb_base.MovePlan.OriginalStack:type_name -> pb_base.TroopStack
	17, // 1: pb_base.MovePlan.CurrentStack:type_name -> pb_base.TroopStack
	9,  // 2: pb_base.MovePlan.Path:type_name -> pb_base.Position
	9,  // 3: pb_base.SimpleMovePlan.Path:type_name -> pb_base.Position
	7,  // 4: pb_base.Player.Role:type_name -> pb_base.PlayerRole
	8,  // 5: pb_base.Player.Stage:type_name -> pb_base.PlayerStage
	9,  // 6: pb_base.Tile.Position:type_name -> pb_base.Position
	9,  // 7: pb_base.Capital.Position:type_name -> pb_base.Position
	9,  // 8: pb_base.Building.Position:type_name -> pb_base.Position
	1,  // 9: pb_base.Building.Type:type_name -> pb_base.BuildingType
	0,  // 10: pb_base.TroopStack.Type:type_name -> pb_base.TroopStackType
	9,  // 11: pb_base.TroopStack.Position:type_name -> pb_base.Position
	2,  // 12: pb_base.Card.Suit:type_name -> pb_base.CardSuit
	4,  // 13: pb_base.Turn.Stage:type_name -> pb_base.TurnStage
	19, // 14: pb_base.Round.Turn:type_name -> pb_base.Turn
	5,  // 15: pb_base.Game.Stage:type_name -> pb_base.GameStage
	6,  // 16: pb_base.Blueprint.Type:type_name -> pb_base.BluePrintType
	18, // 17: pb_base.CardDeck.CardsDiscardLastRound:type_name -> pb_base.Card
	18, // 18: pb_base.CardDeck.CardsDealing:type_name -> pb_base.Card
	18, // 19: pb_base.CardDeck.CardsInHand:type_name -> pb_base.Card
	18, // 20: pb_base.CardDeck.CardsPublic:type_name -> pb_base.Card
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_base_proto_init() }
func file_base_proto_init() {
	if File_base_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_base_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Position); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovePlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleMovePlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Capital); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Talent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Building); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TroopStack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Turn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Round); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Game); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Token); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Blueprint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardDeck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdentityPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_base_proto_rawDesc,
			NumEnums:      9,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_base_proto_goTypes,
		DependencyIndexes: file_base_proto_depIdxs,
		EnumInfos:         file_base_proto_enumTypes,
		MessageInfos:      file_base_proto_msgTypes,
	}.Build()
	File_base_proto = out.File
	file_base_proto_rawDesc = nil
	file_base_proto_goTypes = nil
	file_base_proto_depIdxs = nil
}
